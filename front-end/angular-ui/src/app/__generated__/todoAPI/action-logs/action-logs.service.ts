/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * TodoApi
 * OpenAPI spec version: v1
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

import { Observable } from 'rxjs';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class ActionLogsService {
  private readonly http = inject(HttpClient);
  getApiActionLogs<TData = null>(
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiActionLogs<TData = null>(
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiActionLogs<TData = null>(
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiActionLogs<TData = null>(
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/action_logs`, options);
  }
  getApiActionLogsAll<TData = null>(
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiActionLogsAll<TData = null>(
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiActionLogsAll<TData = null>(
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiActionLogsAll<TData = null>(
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/action_logs/all`, options);
  }
}

export type GetApiActionLogsClientResult = never;
export type GetApiActionLogsAllClientResult = never;
