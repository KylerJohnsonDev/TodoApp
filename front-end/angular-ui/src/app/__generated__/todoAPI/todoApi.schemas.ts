/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * TodoApi
 * OpenAPI spec version: v1
 */
export interface ActionLogDto {
  /**
   * @minimum 0
   * @maximum 2147483647
   */
  id?: number;
  /** @nullable */
  username?: string | null;
  timestamp?: string;
  /** @nullable */
  action?: string | null;
}

export interface ActionLogsResponseDto {
  /** @nullable */
  action_logs?: ActionLogDto[] | null;
  total_count?: number;
  is_last_page?: boolean;
}

export interface AuthResponseDto {
  /** @nullable */
  token?: string | null;
  /** @nullable */
  username?: string | null;
  /** @nullable */
  email?: string | null;
  expires?: string;
}

export interface ChangePasswordDto {
  /** @minLength 1 */
  current_password: string;
  /**
   * @minLength 6
   * @maxLength 100
   */
  new_password: string;
  /** @minLength 1 */
  confirm_new_password: string;
}

export interface CreateTodoDto {
  /**
   * @minLength 1
   * @maxLength 500
   */
  text: string;
}

export interface DeleteMultipleTodosDto {
  /** @minItems 1 */
  todo_ids: number[];
}

export interface LoginDto {
  /** @minLength 1 */
  username_or_email: string;
  /** @minLength 1 */
  password: string;
}

export interface RegisterDto {
  /**
   * @minLength 3
   * @maxLength 100
   */
  username: string;
  /**
   * @minLength 0
   * @maxLength 255
   */
  email: string;
  /**
   * @minLength 6
   * @maxLength 100
   */
  password: string;
  /** @minLength 1 */
  confirm_password: string;
}

export interface ResetPasswordDto {
  /** @minLength 1 */
  email: string;
}

export interface TodoResponseDto {
  /**
   * @minimum 0
   * @maximum 2147483647
   */
  id: number;
  /** @nullable */
  text?: string | null;
  status?: TodoStatus;
  /** @nullable */
  created_at?: string | null;
  /** @nullable */
  updated_at?: string | null;
  /** @nullable */
  completed_at?: string | null;
}

export type TodoStatus = (typeof TodoStatus)[keyof typeof TodoStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TodoStatus = {
  Incomplete: 'Incomplete',
  InProgress: 'InProgress',
  Complete: 'Complete',
} as const;

export interface UpdateMultipleTodoStatusDto {
  /** @minItems 1 */
  todo_ids: number[];
  status: TodoStatus;
}

export interface UpdateTodoDto {
  /**
   * @minLength 1
   * @maxLength 500
   * @nullable
   */
  text?: string | null;
  status?: TodoStatus;
}

export interface UserDto {
  id?: number;
  /** @nullable */
  username?: string | null;
  /** @nullable */
  email?: string | null;
  created_at?: string;
  updated_at?: string;
}

export type GetUserActionLogsParams = {
  /**
   * Page number
   */
  page?: number;
  /**
   * Page size
   */
  pageSize?: number;
};

export type GetAllActionLogsParams = {
  page?: number;
  pageSize?: number;
};
